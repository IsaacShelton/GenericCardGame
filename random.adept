
import 'main.adept'

#if use_mt19937
    import 'mt19937.adept'
#end

func random uint {
    #if use_mt19937
        return mt19937Random()
    #else
        return rand() as uint
    #end
}

func random(upper_exclusive uint) uint {
    if upper_exclusive == 0, return 0
    
    while true {
        #if use_mt19937
            value uint = mt19937Random()
            sections uint = (MT19937_MAX + 1) / upper_exclusive
            deserted uint = (MT19937_MAX + 1) - upper_exclusive * sections
            if value <= MT19937_MAX - deserted, return value % upper_exclusive
        #else
            value uint = rand() as uint
            sections uint = (RAND_MAX + 1) / upper_exclusive
            deserted uint = (RAND_MAX + 1) - upper_exclusive * sections
            if value <= RAND_MAX - deserted, return value % upper_exclusive
        #end
    }
    
    return 0
}

func random(lower_inclusive, upper_exclusive uint) uint {
    return lower_inclusive + random(upper_exclusive - lower_inclusive)    
}

func randomSetSeed {
    entropy uint = undef
    randomSetSeed(time(null) + &entropy as uint)
}

func randomSetSeed(seed uint) {
    #if use_mt19937
        mt19937Seed(seed)
    #else
        srand(seed)
    #end
}
