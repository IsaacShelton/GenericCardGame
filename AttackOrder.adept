
import 'main.adept'

struct AttackOrder (aggressor CardNetworkID, victim CardNetworkID, randomness int, is_counter bool)

func attackOrder(aggressor, victim CardNetworkID, randomness int = -1, is_counter bool = false) AttackOrder {
    order POD AttackOrder
    order.aggressor = aggressor
    order.victim = victim
    order.randomness = randomness
    order.is_counter = is_counter
    return order
}

func enforceMaxAttacks(this *<AttackOrder> List, aggressor CardNetworkID, amount usize) {
    count usize = 0
    each AttackOrder in *this, if it.aggressor == aggressor, count++
    
    // Attack count for that card is valid
    if count <= amount, return
    
    // Remove first attacks from aggressor in order to meet attack amount limitation
    each AttackOrder in *this {
        if it.aggressor == aggressor {
            this.remove(idx--)
            if --count <= amount, return
        }
    }
}
